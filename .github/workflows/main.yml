name: Build, Test, and Deploy a container to an Azure Container Instance

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

env:
  IMAGE_NAME: reCashflow.azurecr.io/cashflow:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Create firebase.js file
        run: |
          echo "const firebaseConfig = ${{ secrets.FIREBASE_CONFIG }};" > src/firebase.js
          echo "import { initializeApp } from 'firebase/app';" >> src/firebase.js
          echo "import { getAnalytics } from 'firebase/analytics';" >> src/firebase.js
          echo "const app = initializeApp(firebaseConfig);" >> src/firebase.js
          echo "const analytics = getAnalytics(app);" >> src/firebase.js
          echo "export { app, analytics };" >> src/firebase.js

      - name: Run tests
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }} .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register ContainerInstance Provider
        run: |
          az provider register --namespace Microsoft.ContainerInstance
          az provider show --namespace Microsoft.ContainerInstance --query "registrationState"

      - name: Deploy to Azure Container Instance
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: myapp-${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: myapp
          location: 'westus'
